'use strict';// const mockData = {
//   buttons: [10, 38, -13, -18],
//   bars: [62, 45, 62],
//   limit: 230
// };
// Promise.resolve(mockData)
//   .then(loadProgressBars);
var url="https://pb-api.herokuapp.com/bars";fetch("https://pb-api.herokuapp.com/bars").then(function(a){return a.json()}).then(loadProgressBars);function loadProgressBars(a){var b=document.getElementById("root");b.innerText="";var c=document.createElement("section");c.classList.add("section");var d=createProgressBars(a.limit,a.bars,a.buttons);c.appendChild(d),b.appendChild(c)}function createProgressBars(a,b,c){var d=document.createElement("div");d.classList.add("container");var e=b.map(function(b){return createProgress(a,b)}),f=document.createElement("select");e.forEach(function(a,b){var c=document.createElement("option");c.innerText="Progress "+(b+1),f.appendChild(c)});var g=document.createElement("div");g.appendChild(f),g.classList.add("select"),d.appendChild(g),e.forEach(function(a){return d.appendChild(a.element)});var h=document.createElement("div");return h.classList.add("buttons"),c.forEach(function(a){var b=document.createElement("button");b.innerText=(0<a?"+":"")+a,b.onclick=function(){e[f.selectedIndex].increase(a)},b.classList.add("button"),h.appendChild(b)}),d.appendChild(h),d}function createProgress(a,b){function c(a){var b=Math.max;if(null===g&&0!==a)// to keep it simple, do not increase if animation is still in progress
{var c=b(f+a,0);d(c)}}function d(a){function b(){f===a?(clearInterval(g),g=null):(f+=a>c?1:-1,e())}var c=f;g=setInterval(b,10)}function e(){var b=Math.min,c=Math.round,d=c(100*(f/a));j.innerText=d+"%",i.style.width=b(d,100)+"%",i.classList.toggle("in",f<=a),i.classList.toggle("out",f>a)}var f=b,g=null,h=document.createElement("div");h.classList.add("progress-container");var i=document.createElement("div");i.classList.add("progress-bar"),h.appendChild(i);var j=document.createElement("div");return j.classList.add("progress-text"),h.appendChild(j),e(),{element:h,increase:c}}